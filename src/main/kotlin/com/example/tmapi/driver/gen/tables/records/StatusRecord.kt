/*
 * This file is generated by jOOQ.
 */
package com.example.tmapi.driver.gen.tables.records


import com.example.tmapi.driver.gen.tables.Status

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
class StatusRecord() : UpdatableRecordImpl<StatusRecord>(Status.STATUS), Record6<Int?, Int?, Int?, String?, LocalDateTime?, LocalDateTime?> {

    var statusId: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var projectId: Int?
        set(value) = set(1, value)
        get() = get(1) as Int?

    var progress: Int?
        set(value) = set(2, value)
        get() = get(2) as Int?

    var statusName: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var createAt: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var updateAt: LocalDateTime?
        set(value) = set(5, value)
        get() = get(5) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Int?, Int?, Int?, String?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row6<Int?, Int?, Int?, String?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row6<Int?, Int?, Int?, String?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row6<Int?, Int?, Int?, String?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Int?> = Status.STATUS.STATUS_ID
    override fun field2(): Field<Int?> = Status.STATUS.PROJECT_ID
    override fun field3(): Field<Int?> = Status.STATUS.PROGRESS
    override fun field4(): Field<String?> = Status.STATUS.STATUS_NAME
    override fun field5(): Field<LocalDateTime?> = Status.STATUS.CREATE_AT
    override fun field6(): Field<LocalDateTime?> = Status.STATUS.UPDATE_AT
    override fun component1(): Int? = statusId
    override fun component2(): Int? = projectId
    override fun component3(): Int? = progress
    override fun component4(): String? = statusName
    override fun component5(): LocalDateTime? = createAt
    override fun component6(): LocalDateTime? = updateAt
    override fun value1(): Int? = statusId
    override fun value2(): Int? = projectId
    override fun value3(): Int? = progress
    override fun value4(): String? = statusName
    override fun value5(): LocalDateTime? = createAt
    override fun value6(): LocalDateTime? = updateAt

    override fun value1(value: Int?): StatusRecord {
        statusId = value
        return this
    }

    override fun value2(value: Int?): StatusRecord {
        projectId = value
        return this
    }

    override fun value3(value: Int?): StatusRecord {
        progress = value
        return this
    }

    override fun value4(value: String?): StatusRecord {
        statusName = value
        return this
    }

    override fun value5(value: LocalDateTime?): StatusRecord {
        createAt = value
        return this
    }

    override fun value6(value: LocalDateTime?): StatusRecord {
        updateAt = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: Int?, value4: String?, value5: LocalDateTime?, value6: LocalDateTime?): StatusRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised StatusRecord
     */
    constructor(statusId: Int? = null, projectId: Int? = null, progress: Int? = null, statusName: String? = null, createAt: LocalDateTime? = null, updateAt: LocalDateTime? = null): this() {
        this.statusId = statusId
        this.projectId = projectId
        this.progress = progress
        this.statusName = statusName
        this.createAt = createAt
        this.updateAt = updateAt
    }
}
