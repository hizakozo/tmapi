/*
 * This file is generated by jOOQ.
 */
package com.example.tmapi.driver.gen.keys


import com.example.tmapi.driver.gen.tables.Auth
import com.example.tmapi.driver.gen.tables.Comment
import com.example.tmapi.driver.gen.tables.CommentImg
import com.example.tmapi.driver.gen.tables.Project
import com.example.tmapi.driver.gen.tables.Sample
import com.example.tmapi.driver.gen.tables.Status
import com.example.tmapi.driver.gen.tables.Ticket
import com.example.tmapi.driver.gen.tables.TicketImg
import com.example.tmapi.driver.gen.tables.TicketStatus
import com.example.tmapi.driver.gen.tables.User
import com.example.tmapi.driver.gen.tables.UserProject
import com.example.tmapi.driver.gen.tables.records.AuthRecord
import com.example.tmapi.driver.gen.tables.records.CommentImgRecord
import com.example.tmapi.driver.gen.tables.records.CommentRecord
import com.example.tmapi.driver.gen.tables.records.ProjectRecord
import com.example.tmapi.driver.gen.tables.records.SampleRecord
import com.example.tmapi.driver.gen.tables.records.StatusRecord
import com.example.tmapi.driver.gen.tables.records.TicketImgRecord
import com.example.tmapi.driver.gen.tables.records.TicketRecord
import com.example.tmapi.driver.gen.tables.records.TicketStatusRecord
import com.example.tmapi.driver.gen.tables.records.UserProjectRecord
import com.example.tmapi.driver.gen.tables.records.UserRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val KEY_AUTH_LOGIN_ID: UniqueKey<AuthRecord> = Internal.createUniqueKey(Auth.AUTH, DSL.name("KEY_auth_login_id"), arrayOf(Auth.AUTH.LOGIN_ID), true)
val KEY_AUTH_PRIMARY: UniqueKey<AuthRecord> = Internal.createUniqueKey(Auth.AUTH, DSL.name("KEY_auth_PRIMARY"), arrayOf(Auth.AUTH.AUTH_ID), true)
val KEY_COMMENT_PRIMARY: UniqueKey<CommentRecord> = Internal.createUniqueKey(Comment.COMMENT, DSL.name("KEY_comment_PRIMARY"), arrayOf(Comment.COMMENT.COMMENT_ID), true)
val KEY_COMMENT_IMG_PRIMARY: UniqueKey<CommentImgRecord> = Internal.createUniqueKey(CommentImg.COMMENT_IMG, DSL.name("KEY_comment_img_PRIMARY"), arrayOf(CommentImg.COMMENT_IMG.COMMENT_IMG_ID), true)
val KEY_PROJECT_PRIMARY: UniqueKey<ProjectRecord> = Internal.createUniqueKey(Project.PROJECT, DSL.name("KEY_project_PRIMARY"), arrayOf(Project.PROJECT.PROJECT_ID), true)
val KEY_SAMPLE_NUM_UNIQUE: UniqueKey<SampleRecord> = Internal.createUniqueKey(Sample.SAMPLE, DSL.name("KEY_sample_num_unique"), arrayOf(Sample.SAMPLE.NUMA, Sample.SAMPLE.NUMB, Sample.SAMPLE.NUMC), true)
val KEY_SAMPLE_PRIMARY: UniqueKey<SampleRecord> = Internal.createUniqueKey(Sample.SAMPLE, DSL.name("KEY_sample_PRIMARY"), arrayOf(Sample.SAMPLE.SAMPLE_ID), true)
val KEY_STATUS_PRIMARY: UniqueKey<StatusRecord> = Internal.createUniqueKey(Status.STATUS, DSL.name("KEY_status_PRIMARY"), arrayOf(Status.STATUS.STATUS_ID), true)
val KEY_TICKET_PRIMARY: UniqueKey<TicketRecord> = Internal.createUniqueKey(Ticket.TICKET, DSL.name("KEY_ticket_PRIMARY"), arrayOf(Ticket.TICKET.TICKET_ID), true)
val KEY_TICKET_IMG_PRIMARY: UniqueKey<TicketImgRecord> = Internal.createUniqueKey(TicketImg.TICKET_IMG, DSL.name("KEY_ticket_img_PRIMARY"), arrayOf(TicketImg.TICKET_IMG.TICKET_IMG_ID), true)
val KEY_TICKET_STATUS_PRIMARY: UniqueKey<TicketStatusRecord> = Internal.createUniqueKey(TicketStatus.TICKET_STATUS, DSL.name("KEY_ticket_status_PRIMARY"), arrayOf(TicketStatus.TICKET_STATUS.TICKET_STATUS_ID), true)
val KEY_USER_PRIMARY: UniqueKey<UserRecord> = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), arrayOf(User.USER.USER_ID), true)
val KEY_USER_PROJECT_PRIMARY: UniqueKey<UserProjectRecord> = Internal.createUniqueKey(UserProject.USER_PROJECT, DSL.name("KEY_user_project_PRIMARY"), arrayOf(UserProject.USER_PROJECT.USER_PROJECT_ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val AUTH_IBFK_1: ForeignKey<AuthRecord, UserRecord> = Internal.createForeignKey(Auth.AUTH, DSL.name("auth_ibfk_1"), arrayOf(Auth.AUTH.USER_ID), com.example.tmapi.driver.gen.keys.KEY_USER_PRIMARY, arrayOf(User.USER.USER_ID), true)
val COMMENT_IBFK_1: ForeignKey<CommentRecord, UserRecord> = Internal.createForeignKey(Comment.COMMENT, DSL.name("comment_ibfk_1"), arrayOf(Comment.COMMENT.USER_ID), com.example.tmapi.driver.gen.keys.KEY_USER_PRIMARY, arrayOf(User.USER.USER_ID), true)
val COMMENT_IBFK_2: ForeignKey<CommentRecord, TicketRecord> = Internal.createForeignKey(Comment.COMMENT, DSL.name("comment_ibfk_2"), arrayOf(Comment.COMMENT.TICKET_ID), com.example.tmapi.driver.gen.keys.KEY_TICKET_PRIMARY, arrayOf(Ticket.TICKET.TICKET_ID), true)
val COMMENT_IMG_IBFK_1: ForeignKey<CommentImgRecord, CommentRecord> = Internal.createForeignKey(CommentImg.COMMENT_IMG, DSL.name("comment_img_ibfk_1"), arrayOf(CommentImg.COMMENT_IMG.COMMENT_ID), com.example.tmapi.driver.gen.keys.KEY_COMMENT_PRIMARY, arrayOf(Comment.COMMENT.COMMENT_ID), true)
val STATUS_IBFK_1: ForeignKey<StatusRecord, ProjectRecord> = Internal.createForeignKey(Status.STATUS, DSL.name("status_ibfk_1"), arrayOf(Status.STATUS.PROJECT_ID), com.example.tmapi.driver.gen.keys.KEY_PROJECT_PRIMARY, arrayOf(Project.PROJECT.PROJECT_ID), true)
val TICKET_IBFK_1: ForeignKey<TicketRecord, ProjectRecord> = Internal.createForeignKey(Ticket.TICKET, DSL.name("ticket_ibfk_1"), arrayOf(Ticket.TICKET.PROJECT_ID), com.example.tmapi.driver.gen.keys.KEY_PROJECT_PRIMARY, arrayOf(Project.PROJECT.PROJECT_ID), true)
val TICKET_IMG_IBFK_1: ForeignKey<TicketImgRecord, TicketRecord> = Internal.createForeignKey(TicketImg.TICKET_IMG, DSL.name("ticket_img_ibfk_1"), arrayOf(TicketImg.TICKET_IMG.TICKET_ID), com.example.tmapi.driver.gen.keys.KEY_TICKET_PRIMARY, arrayOf(Ticket.TICKET.TICKET_ID), true)
val TICKET_STATUS_IBFK_1: ForeignKey<TicketStatusRecord, TicketRecord> = Internal.createForeignKey(TicketStatus.TICKET_STATUS, DSL.name("ticket_status_ibfk_1"), arrayOf(TicketStatus.TICKET_STATUS.TICKET_ID), com.example.tmapi.driver.gen.keys.KEY_TICKET_PRIMARY, arrayOf(Ticket.TICKET.TICKET_ID), true)
val TICKET_STATUS_IBFK_2: ForeignKey<TicketStatusRecord, StatusRecord> = Internal.createForeignKey(TicketStatus.TICKET_STATUS, DSL.name("ticket_status_ibfk_2"), arrayOf(TicketStatus.TICKET_STATUS.STATUS_ID), com.example.tmapi.driver.gen.keys.KEY_STATUS_PRIMARY, arrayOf(Status.STATUS.STATUS_ID), true)
val USER_PROJECT_IBFK_1: ForeignKey<UserProjectRecord, UserRecord> = Internal.createForeignKey(UserProject.USER_PROJECT, DSL.name("user_project_ibfk_1"), arrayOf(UserProject.USER_PROJECT.USER_ID), com.example.tmapi.driver.gen.keys.KEY_USER_PRIMARY, arrayOf(User.USER.USER_ID), true)
val USER_PROJECT_IBFK_2: ForeignKey<UserProjectRecord, ProjectRecord> = Internal.createForeignKey(UserProject.USER_PROJECT, DSL.name("user_project_ibfk_2"), arrayOf(UserProject.USER_PROJECT.PROJECT_ID), com.example.tmapi.driver.gen.keys.KEY_PROJECT_PRIMARY, arrayOf(Project.PROJECT.PROJECT_ID), true)
